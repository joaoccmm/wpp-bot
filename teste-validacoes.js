// Teste r√°pido das valida√ß√µes implementadas
console.log("üß™ TESTE DAS VALIDA√á√ïES IMPLEMENTADAS\n");

console.log("1. üÜî TESTE CPF:");
const cpfs = [
  "12345678901", // ‚úÖ apenas n√∫meros
  "123.456.789-01", // ‚úÖ formatado
  "123.456.789.01", // ‚ùå formato incorreto
  "1234567890", // ‚ùå muito curto
];

cpfs.forEach((cpf) => {
  const cpfLimpo = cpf.replace(/[.-]/g, "");
  const valido = /^\d{11}$/.test(cpfLimpo);
  console.log(
    `  ${cpf.padEnd(15)} ‚Üí ${cpfLimpo} ‚Üí ${
      valido ? "‚úÖ V√ÅLIDO" : "‚ùå INV√ÅLIDO"
    }`
  );
});

console.log("\n2. üì± TESTE TELEFONE:");
const telefones = [
  "11987654321", // ‚úÖ apenas n√∫meros
  "11 9876-5432", // ‚úÖ com tra√ßo
  "11 9876 5432", // ‚úÖ com espa√ßos
  "(11) 98765-4321", // ‚úÖ com par√™nteses
  "1234567890", // ‚úÖ 10 d√≠gitos
  "123456789", // ‚ùå muito curto
];

telefones.forEach((tel) => {
  const telLimpo = tel.replace(/[\s\-\(\)]/g, "");
  const valido = /^\d{10,11}$/.test(telLimpo);
  console.log(
    `  ${tel.padEnd(15)} ‚Üí ${telLimpo.padEnd(11)} ‚Üí ${
      valido ? "‚úÖ V√ÅLIDO" : "‚ùå INV√ÅLIDO"
    }`
  );
});

console.log("\n3. üìÖ TESTE DATA:");
const datas = [
  "01/01/1990", // ‚úÖ v√°lido
  "31/12/2000", // ‚úÖ v√°lido
  "1/1/1990", // ‚ùå sem zero
  "01-01-1990", // ‚ùå formato incorreto
];

datas.forEach((data) => {
  const valida = /^\d{2}\/\d{2}\/\d{4}$/.test(data);
  console.log(`  ${data.padEnd(15)} ‚Üí ${valida ? "‚úÖ V√ÅLIDO" : "‚ùå INV√ÅLIDO"}`);
});

console.log("\n4. üè† TESTE CEP:");
const ceps = [
  "01234567", // ‚úÖ 8 d√≠gitos
  "12345678", // ‚úÖ 8 d√≠gitos
  "1234567", // ‚ùå 7 d√≠gitos
  "123456789", // ‚ùå 9 d√≠gitos
  "12345-678", // ‚ùå com h√≠fen
];

ceps.forEach((cep) => {
  const valido = /^\d{8}$/.test(cep);
  console.log(`  ${cep.padEnd(15)} ‚Üí ${valido ? "‚úÖ V√ÅLIDO" : "‚ùå INV√ÅLIDO"}`);
});

console.log("\n5. üë• TESTE INDICA√á√ÉO:");
const indicacoes = [
  "Igor", // ‚úÖ
  "Matheus", // ‚úÖ
  "Dr. Igor", // ‚úÖ
  "Jo√£o Victor", // ‚úÖ
  "Aline", // ‚úÖ
  "Outro nome", // ‚ùå
];

indicacoes.forEach((indicacao) => {
  const opcao = indicacao.toLowerCase();
  const valida =
    opcao.includes("igor") ||
    opcao.includes("matheus") ||
    opcao.includes("aline") ||
    opcao.includes("simony") ||
    opcao.includes("jo√£o") ||
    opcao.includes("joao") ||
    opcao.includes("victor");

  console.log(
    `  ${indicacao.padEnd(15)} ‚Üí ${valida ? "‚úÖ V√ÅLIDO" : "‚ùå INV√ÅLIDO"}`
  );
});

console.log("\nüéâ TESTE CONCLU√çDO!");
console.log("‚úÖ Todas as valida√ß√µes implementadas foram testadas");
